// this code is autogenerated by ansvia-vscode extension.
// please don't edit this by hand
// use 'ansvia-vscode extension > Edit Model fields' instead.
import 'package:equatable/equatable.dart';
import 'package:meta/meta.dart';

/// Model for UserSettings
@immutable
class UserSettings extends Equatable {
  final int id;
  final bool enablePushNotif;
  final bool complaintMap;
  final bool hasCough;
  final bool hasFever;
  final bool hasCold;
  final bool hasHeadache;

  UserSettings(this.id, this.enablePushNotif, this.complaintMap, this.hasCough,
      this.hasFever, this.hasCold, this.hasHeadache)
      : super([
          id,
          enablePushNotif,
          complaintMap,
          hasCough,
          hasFever,
          hasCold,
          hasHeadache
        ]);

  Map<String, dynamic> toMap() {
    Map<String, dynamic> data = Map();
    data["id"] = this.id;
    data["enable_push_notif"] = this.enablePushNotif;
    data["complaint_map"] = this.complaintMap;
    data["has_cough"] = this.hasCough;
    data["has_fever"] = this.hasFever;
    data["has_cold"] = this.hasCold;
    data["has_headache"] = this.hasHeadache;
    return data;
  }

  static UserSettings fromMap(Map<String, dynamic> data) {
    assert(data['enable_push_notif'] != null,
        "UserSettings.enable_push_notif is null");
    assert(data['complaint_map'] != null, "UserSettings.complaint_map is null");
    assert(data['has_cough'] != null, "UserSettings.has_cough is null");
    assert(data['has_fever'] != null, "UserSettings.has_fever is null");
    assert(data['has_cold'] != null, "UserSettings.has_cold is null");
    assert(data['has_headache'] != null, "UserSettings.has_headache is null");
    return UserSettings(
        data['id'] as int,
        data['enable_push_notif'] as bool,
        data['complaint_map'] as bool,
        data['has_cough'] as bool,
        data['has_fever'] as bool,
        data['has_cold'] as bool,
        data['has_headache'] as bool);
  }

  UserSettings copy(
      {bool enablePushNotif,
      bool complaintMap,
      bool hasCough,
      bool hasFever,
      bool hasCold,
      bool hasHeadache}) {
    return UserSettings(
        this.id,
        enablePushNotif ?? this.enablePushNotif,
        complaintMap ?? this.complaintMap,
        hasCough ?? this.hasCough,
        hasFever ?? this.hasFever,
        hasCold ?? this.hasCold,
        hasHeadache ?? this.hasHeadache);
  }
}
